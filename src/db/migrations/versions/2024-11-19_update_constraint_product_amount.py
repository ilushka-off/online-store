"""update_constraint_product_amount

Revision ID: 00c9d24c7e21
Revises:
Create Date: 2024-11-19 19:30:48.303242

"""

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str | None = "00c9d24c7e21"
down_revision: str | None = None
branch_labels: str | None = None
depends_on: str | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "addresss",
        sa.Column("flat", sa.String(length=50), nullable=True),
        sa.Column("house", sa.String(length=50), nullable=False),
        sa.Column("street", sa.String(length=50), nullable=False),
        sa.Column("city", sa.String(length=50), nullable=False),
        sa.Column("country", sa.String(length=50), nullable=False),
        sa.Column("index", sa.String(length=50), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("addresss_pkey")),
    )
    op.create_index(op.f("addresss_id_idx"), "addresss", ["id"], unique=False)
    op.create_table(
        "categories",
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("categories_pkey")),
    )
    op.create_index(op.f("categories_id_idx"), "categories", ["id"], unique=False)
    op.create_table(
        "orders",
        sa.Column("total_sum", sa.Numeric(precision=7, scale=2), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "CREATED",
                "IN_PROGRESS",
                "TRANSIT",
                "DELIVERED",
                "CANCELED",
                name="orderstatusenum",
            ),
            nullable=False,
        ),
        sa.Column(
            "payment_method",
            sa.Enum(
                "UPON_RECEIPT",
                "AFTER_FITTING",
                "IN_ADVANCE",
                "INSTALLMENTS",
                "UPON_DELIVERY",
                "AFTER_VERIFICATION",
                name="orderpaymentmethodenum",
            ),
            nullable=False,
        ),
        sa.Column("check_serial", sa.String(length=20), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("orders_pkey")),
        sa.UniqueConstraint("check_serial", name=op.f("orders_check_serial_key")),
    )
    op.create_index(op.f("orders_id_idx"), "orders", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("full_name", sa.String(length=100), nullable=False),
        sa.Column("email", sa.String(length=50), nullable=False),
        sa.Column("phone", sa.String(length=30), nullable=False),
        sa.Column("birthday", sa.Date(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("users_pkey")),
        sa.UniqueConstraint("email", name=op.f("users_email_key")),
    )
    op.create_index(op.f("users_id_idx"), "users", ["id"], unique=False)
    op.create_table(
        "order_details",
        sa.Column("address_id", sa.Integer(), nullable=False),
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["address_id"],
            ["addresss.id"],
            name=op.f("order_details_address_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
            name=op.f("order_details_order_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("order_details_user_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "order_id", "address_id", "user_id", name=op.f("order_details_pkey")
        ),
        sa.UniqueConstraint("address_id", name=op.f("order_details_address_id_key")),
        sa.UniqueConstraint("user_id", name=op.f("order_details_user_id_key")),
    )
    op.create_table(
        "products",
        sa.Column("сategory_id", sa.Integer(), nullable=False),
        sa.Column("number", sa.String(length=50), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=False),
        sa.Column("description", sa.Text(), nullable=False),
        sa.Column("price", sa.Numeric(precision=7, scale=2), nullable=False),
        sa.Column("amount", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.CheckConstraint(
            "amount >= 0", name=op.f("products_check_amount_non_negative_check")
        ),
        sa.ForeignKeyConstraint(
            ["сategory_id"],
            ["categories.id"],
            name=op.f("products_сategory_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("products_pkey")),
    )
    op.create_index(op.f("products_id_idx"), "products", ["id"], unique=False)
    op.create_table(
        "order_products",
        sa.Column("order_id", sa.Integer(), nullable=False),
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["order_id"],
            ["orders.id"],
            name=op.f("order_products_order_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["product_id"],
            ["products.id"],
            name=op.f("order_products_product_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "order_id", "product_id", name=op.f("order_products_pkey")
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("order_products")
    op.drop_index(op.f("products_id_idx"), table_name="products")
    op.drop_table("products")
    op.drop_table("order_details")
    op.drop_index(op.f("users_id_idx"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("orders_id_idx"), table_name="orders")
    op.drop_table("orders")
    op.drop_index(op.f("categories_id_idx"), table_name="categories")
    op.drop_table("categories")
    op.drop_index(op.f("addresss_id_idx"), table_name="addresss")
    op.drop_table("addresss")
    # ### end Alembic commands ###
